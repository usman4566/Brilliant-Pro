{"ast":null,"code":"var _jsxFileName = \"D:\\\\LMS\\\\client\\\\src\\\\pages\\\\Admin\\\\Student\\\\StudentTable\\\\StudentTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Card, Container, IconButton, TableFooter, TablePagination } from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport TablePaginationActions from \"@material-ui/core/TablePagination/TablePaginationActions\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  root: {\n    height: \"100%\",\n    paddingTop: \"30px\"\n  }\n});\n\nconst StudentTable = () => {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n\n  const userList = async () => {\n    const user = await Axios.get(\"/users/student\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"auth_token\")\n      }\n    });\n    setData(user.data.studentInfo); //console.log(user.data.teacherInfo)\n  };\n\n  useEffect(() => {\n    userList();\n  }, []); //   const classes = useStyles2();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            className: \"bg-dark \",\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              className: \"text-light\",\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              className: \"text-light\",\n              children: \"Teacher Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              className: \"text-light\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              className: \"text-light\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [(rowsPerPage > 0 ? data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : data).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              align: \"center\",\n              children: row._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: row.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"\",\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, row._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              height: 53 * emptyRows\n            },\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [5, 7, 10, 25, {\n                label: \"All\",\n                value: -1\n              }],\n              colSpan: 3,\n              count: data.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              SelectProps: {\n                inputProps: {\n                  \"aria-label\": \"rows per page\"\n                },\n                native: true\n              },\n              onChangePage: handleChangePage,\n              onChangeRowsPerPage: handleChangeRowsPerPage,\n              ActionsComponent: TablePaginationActions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StudentTable, \"kvNrBlg0gziuvLROPAuP/6mrJ7A=\", false, function () {\n  return [useStyles];\n});\n\n_c = StudentTable;\nexport default StudentTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentTable\");","map":{"version":3,"sources":["D:/LMS/client/src/pages/Admin/Student/StudentTable/StudentTable.js"],"names":["React","useEffect","useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Box","Card","Container","IconButton","TableFooter","TablePagination","Axios","TablePaginationActions","EditIcon","DeleteIcon","useStyles","table","minWidth","root","height","paddingTop","StudentTable","classes","data","setData","userList","user","get","headers","localStorage","getItem","studentInfo","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","row","_id","userName","email","color","label","inputProps","native"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Container,\r\n  IconButton,\r\n  TableFooter,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport TablePaginationActions from \"@material-ui/core/TablePagination/TablePaginationActions\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  root: {\r\n    height: \"100%\",\r\n    paddingTop: \"30px\",\r\n  },\r\n});\r\n\r\nconst StudentTable = () => {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const userList = async () => {\r\n    const user = await Axios.get(\"/users/student\",{\r\n        headers:{\r\n            \"Authorization\":\"Bearer \"+localStorage.getItem(\"auth_token\")\r\n        }\r\n    })\r\n    setData(user.data.studentInfo)\r\n    //console.log(user.data.teacherInfo)\r\n  };\r\n\r\n  useEffect(() => {\r\n    userList()\r\n  }, []);\r\n\r\n  //   const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  return (\r\n    <Container className={classes.root}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow className=\"bg-dark \">\r\n              <TableCell align=\"center\" className=\"text-light\">\r\n                Id\r\n              </TableCell>\r\n              <TableCell align=\"center\" className=\"text-light\">\r\n                Teacher Name\r\n              </TableCell>\r\n              <TableCell align=\"center\" className=\"text-light\">\r\n               Email\r\n              </TableCell>\r\n              \r\n              <TableCell align=\"center\" className=\"text-light\">\r\n                Actions\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : data\r\n            ).map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                  {row._id}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\">{row.userName}</TableCell>\r\n                <TableCell align=\"center\">\r\n                {row.email}\r\n                </TableCell>\r\n                <TableCell className=\"\" align=\"center\">\r\n                  <IconButton>\r\n                    <EditIcon color=\"primary\" />\r\n                  </IconButton>\r\n                  <IconButton>\r\n                    <DeleteIcon style={{ color: \"red\" }} />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 7, 10, 25, { label: \"All\", value: -1 }]}\r\n                colSpan={3}\r\n                count={data.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StudentTable;\r\n"]},"metadata":{},"sourceType":"module"}