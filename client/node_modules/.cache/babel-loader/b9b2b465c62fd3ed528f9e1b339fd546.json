{"ast":null,"code":"var _jsxFileName = \"D:\\\\LMS\\\\client\\\\src\\\\pages\\\\Admin\\\\Course\\\\AddCourse\\\\AddCourseModal\\\\AddCourseModal.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Form } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport Toast_Comp from \"../../../../../components/Toast/Toast_Comp\";\nimport Spinner_comp from \"../../../../../components/Spinner/Spinner_comp\";\nimport \"./AddCourseModal.css\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchCourseInfo } from \"../../../../../Redux/course/courseAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCourseModal = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [lgShow, setLgShow] = useState(false);\n  const [courseThumbnail, setCourseThumbnail] = useState(\"\");\n  const [courseDescription, setCourseDescription] = useState(\"\");\n  const [courseName, setCourseName] = useState(\"\");\n  const [imgLabel, setImgLabel] = useState(\"Choose photo\");\n  const [loading, setLoading] = useState(false);\n  const [toast, setToast] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setImgLabel(courseThumbnail.name);\n  }, [courseThumbnail]);\n\n  const courseFormHandler = e => {\n    e.preventDefault();\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"courseName\", courseName);\n    formData.append(\"courseDescription\", courseDescription);\n    formData.append(\"img\", courseThumbnail);\n    fetch(\"/post-course\", {\n      body: formData,\n      method: \"post\",\n      headers: {\n        authorization: \"Bearer \" + localStorage.getItem(\"auth_token\")\n      }\n    }).then(res => res.json()).then(result => {\n      setToast(true);\n      setLoading(false);\n      setCourseDescription('');\n      setCourseName('');\n      setCourseThumbnail('');\n      dispatch(fetchCourseInfo());\n      dispatch({\n        type: \"UPDATE__COURSE__LIST\",\n        payload: true\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: handleShow,\n      children: \"Add Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast_Comp, {\n      setToast: setToast,\n      renderToast: toast,\n      msg: \"Course Uploaded Successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      show: lgShow,\n      onHide: () => setLgShow(false),\n      \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"h4\",\n            children: \"Add Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [loading && /*#__PURE__*/_jsxDEV(Spinner_comp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: courseFormHandler,\n          encType: \"multipart/form-data\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              onChange: e => setCourseName(e.target.value),\n              value: courseName,\n              type: \"text\",\n              placeholder: \"Enter course name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              onChange: e => setCourseDescription(e.target.value),\n              value: courseDescription,\n              as: \"textarea\",\n              rows: 3,\n              placeholder: \"Enter course Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"input__file\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Course Thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              required: true,\n              type: \"file\",\n              filename: \"img\",\n              onChange: e => setCourseThumbnail(e.target.files[0]),\n              id: \"custom-file\",\n              custom: true,\n              label: imgLabel ? `${imgLabel}` : \"Choose photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCourseModal, \"T2qwDKyLdPPgH6ZcEu8trYQjz0Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddCourseModal;\nexport default AddCourseModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCourseModal\");","map":{"version":3,"sources":["D:/LMS/client/src/pages/Admin/Course/AddCourse/AddCourseModal/AddCourseModal.js"],"names":["Button","Typography","React","useEffect","useState","Modal","Form","Axios","Toast_Comp","Spinner_comp","useDispatch","fetchCourseInfo","AddCourseModal","show","setShow","lgShow","setLgShow","courseThumbnail","setCourseThumbnail","courseDescription","setCourseDescription","courseName","setCourseName","imgLabel","setImgLabel","loading","setLoading","toast","setToast","handleClose","handleShow","dispatch","name","courseFormHandler","e","preventDefault","formData","FormData","append","fetch","body","method","headers","authorization","localStorage","getItem","then","res","json","result","type","payload","catch","err","console","log","target","value","files"],"mappings":"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","sourcesContent":["import { Button, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport Toast_Comp from \"../../../../../components/Toast/Toast_Comp\";\r\nimport Spinner_comp from \"../../../../../components/Spinner/Spinner_comp\";\r\nimport \"./AddCourseModal.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchCourseInfo } from \"../../../../../Redux/course/courseAction\";\r\n\r\nconst AddCourseModal = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [lgShow, setLgShow] = useState(false);\r\n  const [courseThumbnail, setCourseThumbnail] = useState(\"\");\r\n  const [courseDescription, setCourseDescription] = useState(\"\");\r\n  const [courseName, setCourseName] = useState(\"\");\r\n  const [imgLabel, setImgLabel] = useState(\"Choose photo\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [toast, setToast] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {setShow(true)\r\n };\r\n\r\n  const dispatch=useDispatch()\r\n\r\n  useEffect(() => {\r\n    setImgLabel(courseThumbnail.name);\r\n  }, [courseThumbnail]);\r\n\r\n  const courseFormHandler = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"courseName\", courseName);\r\n    formData.append(\"courseDescription\", courseDescription);\r\n    formData.append(\"img\", courseThumbnail);\r\n\r\n    fetch(\"/post-course\", {\r\n      body: formData,\r\n      method: \"post\",\r\n      headers: {\r\n        authorization: \"Bearer \" + localStorage.getItem(\"auth_token\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setToast(true);\r\n        setLoading(false);\r\n        setCourseDescription('')\r\n        setCourseName('')\r\n        setCourseThumbnail('')\r\n        dispatch(fetchCourseInfo())\r\n        dispatch({type:\"UPDATE__COURSE__LIST\",payload: true})\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" variant=\"contained\" onClick={handleShow}>\r\n        Add Course\r\n      </Button>\r\n\r\n      <Toast_Comp\r\n        setToast={setToast}\r\n        renderToast={toast}\r\n        msg=\"Course Uploaded Successfully\"\r\n      />\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={lgShow}\r\n        onHide={() => setLgShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        show={show}\r\n        onHide={handleClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <Typography color=\"textSecondary\" variant=\"h4\">\r\n              Add Course\r\n            </Typography>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {loading && <Spinner_comp />}\r\n\r\n          <Form onSubmit={courseFormHandler} encType=\"multipart/form-data\">\r\n            <Form.Group>\r\n              <Form.Label>Course Name</Form.Label>\r\n              <Form.Control\r\n                required\r\n                onChange={(e) => setCourseName(e.target.value)}\r\n                value={courseName}\r\n                type=\"text\"\r\n                placeholder=\"Enter course name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Course Description</Form.Label>\r\n\r\n              <Form.Control\r\n                required\r\n                onChange={(e) => setCourseDescription(e.target.value)}\r\n                value={courseDescription}\r\n                as=\"textarea\"\r\n                rows={3}\r\n                placeholder=\"Enter course Description\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"input__file\">\r\n              <label>Course Thumbnail</label>\r\n              <br />\r\n              <Form.File\r\n                required\r\n                type=\"file\"\r\n                filename=\"img\"\r\n                onChange={(e) => setCourseThumbnail(e.target.files[0])}\r\n                id=\"custom-file\"\r\n                custom\r\n                label={imgLabel ? `${imgLabel}` : \"Choose photo\"}\r\n              />\r\n            </Form.Group>\r\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCourseModal;\r\n"]},"metadata":{},"sourceType":"module"}